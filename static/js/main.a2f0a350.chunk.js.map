{"version":3,"sources":["suduko/Suduko.js","App.js","serviceWorker.js","index.js"],"names":["Timer","run","initialTime","useMemo","Date","getTime","toTime","distance","days","Math","floor","hours","minutes","seconds","getElapsedTime","time0","useTimer","useState","time","setTime","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","getNumberOnGameboard","gameBoard","pos","y","values","x","value","getIndicies","size","numberOfRows","numberOfCols","allInidicies","row","rowIndicies","col","push","buildPos","quadrantSize","quadrantRows","quadrantCols","rowsInQuadrant","colsInQuadrant","quadrantRow","quadrantCol","quadrantIndicies","mapGameboardSquare","gameboard","poss","fn","gb","deepCopy","Array","isArray","forEach","result","getUniquePoss","a","length","i","j","tmp","b","isSamePos","buildSquare","square","failing","locked","possible","mapHint","Object","keys","numStr","Number","s1","s2","getKeyFromPos","isEmptyArray","array","JSON","parse","stringify","Suduko","runTimer","setRunTimer","indicies","neigborsMap","neighborsMap","key","undefined","getNeighborsMap","window","location","href","setHref","params","searchParams","URLSearchParams","search","get","pushState","_href","history","dispatchEvent","Event","addEventListener","setQueryParam","param","set","split","getQueryParam","useHistory","newGameBoard","map","getPosFromKey","currentValue","n","oldValue","number","getNeighbors","filter","neighbor","getAllNeighborsWithNumber","withNumbersHint","is","numbers","failingSquareOnGameBoard","withValidateNumbers","height","width","getInitialGameBoard","valuesAsString","concat","parseInt","getGameBoardValues","remainingNumbers","getNumberOfEmptyPositionsInGameboard","handleInput","evt","input","theEvent","event","keyCode","which","String","fromCharCode","test","returnValue","preventDefault","validateInput","nextGameBoard","join","setGameBoard","placeNumberOnGameBoard","boardUI","cols","tdClassnames","props","classNames","possibleNumbers","entries","title","className","disabled","type","onPaste","onKeyDown","defaultValue","maxLength","style","margin","onClick","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2f0a350.chunk.js","sourcesContent":["import React, {useMemo, useState, useEffect, useRef} from 'react';\n\nfunction Suduko() {\n    const size = 3;\n    const [runTimer, setRunTimer] = useState(true);\n    const indicies = useMemo(() => getIndicies(size), [size]);\n    const neigborsMap = useMemo(() => getNeighborsMap(getIndicies(size)), [size]);\n    const {setQueryParam, getQueryParam} = useHistory();\n\n    const gameBoard = useMemo(() => {\n        return withNumbersHint(withValidateNumbers(getInitialGameBoard(size, getGameBoardValues(getQueryParam('b'), size)), indicies), neigborsMap);\n        }, [getQueryParam, indicies, neigborsMap]);\n\n    const remainingNumbers = useMemo(() => {\n        return getNumberOfEmptyPositionsInGameboard(gameBoard);\n    }, [gameBoard])\n\n    function setGameBoard(gb){\n        var result = [];\n        for (var i = 0 ; i < gb.length; i++) {\n            for (var j = 0; j < gb[i].values.length; j++) {\n                result.push(gb[i].values[j].value);\n            }\n        }\n        setQueryParam('b', result.join(''))\n    }\n\n    const handleInput = (square) => (evt) => {\n        let input = validateInput(evt);\n        if (input) {\n            let number = input !== \"*\" ? input : 0;\n            let nextGameBoard = deepCopy(gameBoard);\n            nextGameBoard = placeNumberOnGameBoard(number, nextGameBoard, square);\n            setGameBoard(nextGameBoard);\n\n        }\n    }\n    let boardUI = gameBoard.map(row => {\n        let cols = row.values.map(square => {\n            let tdClassnames = classNames({\n                \"verticalBorder\": square.x === 2 || square.x === 5,\n                \"horizontalBorder\" : square.y === 2 || square.y === 5,\n                \"failed\" : square.failing\n            });\n            let possibleNumbers = [];\n            for (let [key, value] of Object.entries(square.possible)) {\n                if (key !== \"0\" && value) {\n                    possibleNumbers.push(key);\n                }\n            }\n            let title = possibleNumbers.join(\", \");\n\n            return (\n                <td key={square.id} className={tdClassnames}>\n                    <input title={title} disabled={square.locked} key={square.id} type={\"text\"} onPaste={handleInput(square)} onKeyDown={handleInput(square)} defaultValue={square.value === 0 ? '' : square.value} size={1} maxLength={1}/>\n                </td>\n            )\n        });\n        return (\n            <tr key={row.id}>\n                {cols}\n            </tr>\n        )\n    })\n\n    function toggleTimerActive(){\n        setRunTimer(!runTimer);\n    }\n\n    return (\n        <>\n            <h1>Welcome to Suduko</h1>\n            <Timer run={runTimer && remainingNumbers > 0}/>\n            <button style={{margin:\"10px\"}} onClick={toggleTimerActive} disabled={remainingNumbers == 0} >{runTimer?\"Pause\":\"Continue\"}</button>\n            <p>\n                {remainingNumbers > 0 && \"Numbers to play:\" + remainingNumbers}\n                {remainingNumbers == 0 && \"Congratulation, no more numbers to play!\"}\n            </p>\n            <table className={\"App gameBoard\"}>\n                <tbody>{boardUI}</tbody>\n            </table>\n        </>\n    );\n}\n\nfunction useHistory(){\n        const [href, setHref] = useState(window.location.href);\n        const params = useMemo(() => {\n            let searchParams = new URLSearchParams(window.location.search);\n            let params = {};\n            for(var key of searchParams.keys()){\n                params[key] = searchParams.get(key);\n            }\n            return params;\n        }, [window.location.search]);\n\n        useEffect(() => {\n            window.addEventListener('popstate', () => {\n                setHref(window.location.href)\n            });\n        }, [])\n\n        function pushState(_href){\n            window.history.pushState({}, '', _href)\n            window.dispatchEvent(new Event('popstate'));\n        }\n        function setQueryParam(param, value){\n            let searchParams = new URLSearchParams(window.location.search);\n            searchParams.set(param, value);\n            pushState(window.location.href.split(\"?\")[0] + \"?\" + searchParams)\n        }\n        function getQueryParam(param){\n            let searchParams = new URLSearchParams(window.location.search);\n            return searchParams.get(param);\n        }\n\n        return {href, params, pushState, setQueryParam, getQueryParam};\n\n}\n\nfunction Timer({run}){\n        const {getElapsedTime, time0} = useTimer();\n        const [time, setTime] = useState(time0);\n\n        useInterval(() => {\n            setTime(getElapsedTime());\n        }, run ? 1000 : null)\n\n        return (\n            <>\n            {time.days}d {time.hours}h {time.minutes}m {time.seconds}s\n            </>\n        )\n}\n\nfunction useTimer(){\n    const initialTime = useMemo(() => {\n        return new Date().getTime();\n    },[])\n\n    function getElapsedTime(){\n        let now = new Date().getTime();\n        let distance = now - initialTime;\n        return toTime(distance);\n    }\n    function time0(){\n        return toTime(0)\n    }\n\n    function toTime(distance){\n        return {\n            days: distance ? Math.floor(distance / (1000 * 60 * 60 * 24)) : 0,\n            hours: distance ? Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) : 0,\n            minutes: distance ? Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)) : 0,\n            seconds: distance ? Math.floor((distance % (1000 * 60)) / 1000) : 0\n        }\n    }\n    return{\n        getElapsedTime,\n        time0,\n    }\n}\n\nfunction useInterval(callback, delay){\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction getGameBoardValues(valuesAsString, size){\n        let height = size*size;\n        let width = size*size;\n        let values = (valuesAsString?valuesAsString.split(''):[]).concat(new Array(height * width));\n        var result = [];\n        for (var i = 0 ; i < height; i++) {\n            result[i] = [];\n            for (var j = 0; j < width; j++) {\n                result[i][j] = parseInt(values[i*height+j]||'0', 10);\n            }\n        }\n        return result;\n\n}\n\nfunction withValidateNumbers(gameBoard, indicies){\n    let newGameBoard = [...gameBoard];\n    indicies.forEach(is => {\n        let numbers = {};\n        is.forEach(i => {\n            let n = getNumberOnGameboard(gameBoard, i);\n            if(n !== 0){\n                if(numbers[n]){\n                    numbers[n].push(i)\n                } else {\n                    numbers[n] = [i]\n                }\n            }\n        })\n        if(Object.keys(numbers).length > 1)\n            Object.keys(numbers).forEach(key => {\n                if(numbers[key].length > 1){\n                    numbers[key].forEach(pos =>{\n                        newGameBoard = failingSquareOnGameBoard(newGameBoard, pos);\n                    })\n                }\n            })\n\n    })\n    return newGameBoard;\n}\nfunction withNumbersHint(gameBoard, neigborsMap){\n    let newGameBoard = [...gameBoard];\n    Object.keys(neigborsMap)\n    .map(key => getPosFromKey(key))\n    .forEach(pos => {\n        let currentValue = getNumberOnGameboard(newGameBoard, pos);\n        if(currentValue === 0){\n            newGameBoard = mapHint(newGameBoard, pos, (n, oldValue) => {\n                return isEmptyArray(getAllNeighborsWithNumber(neigborsMap, pos, n, gameBoard));\n            });\n        } else {\n            newGameBoard = mapHint(newGameBoard, pos, (n, oldValue)=> {\n                return n === 0 ;\n            });\n        }\n    })\n    return newGameBoard;\n}\n\nfunction validateInput(evt){\n    var theEvent = evt || window.event;\n    var keyCode = theEvent.keyCode || theEvent.which;\n    let key = String.fromCharCode(keyCode);\n\n    var regex = /[1-9]/;\n    if (!regex.test(key)) {\n        theEvent.returnValue = false;\n        if (/[ -~]/.test(key) && theEvent.preventDefault) {\n            theEvent.preventDefault();\n        }\n        if (keyCode === 8 || keyCode === 32) {\n            return \"*\";\n        }\n        return;\n    } else {\n        return key;\n    }\n}\nfunction classNames(props) {\n    var result = '';\n    Object.keys(props).forEach((key) => {\n        if(props[key]){\n            result += key;\n            result += ' ';\n        }\n    })\n    return result;\n}\n\nfunction getNeighbors(neigborsMap, pos){\n    return [...neigborsMap[getKeyFromPos(pos)]];\n}\n\nfunction getAllNeighborsWithNumber(neigborsMap, pos, number, gameboard) {\n    return getNeighbors(neigborsMap,pos).filter((neighbor) => {\n        return !isSamePos(pos, neighbor) && number === getNumberOnGameboard(gameboard, neighbor);\n    });\n}\n\nfunction failingSquareOnGameBoard(gameBoard, pos) {\n    return mapGameboardSquare(gameBoard, pos, (square) => {square.failing = true;})\n}\nfunction placeNumberOnGameBoard(number, gameBoard, pos) {\n    return mapGameboardSquare(gameBoard, pos, (square) => {square.value = number;})\n}\nfunction getNumberOnGameboard(gameBoard, pos) {\n    return gameBoard[pos.y].values[pos.x].value;\n}\nfunction getNumberOfEmptyPositionsInGameboard(gameBoard) {\n    let height = gameBoard.length;\n    let width = gameBoard.length;\n    var result = width*height;\n    for (var i = 0 ; i < height; i++) {\n        for (var j = 0; j < width; j++) {\n            if(gameBoard[i].values[j].value > 0){\n                result -= 1\n            }\n        }\n    }\n    return result;\n}\nfunction getInitialGameBoard(size, values) {\n    let height = size*size;\n    let width = size*size;\n    var result = [];\n    for (var i = 0 ; i < height; i++) {\n        result[i] = {id:i, values:[]};\n        for (var j = 0; j < width; j++) {\n            result[i].values[j] = buildSquare(i, j, values[i][j]);\n        }\n    }\n    return result;\n}\n\nfunction getIndicies(size){\n    let numberOfRows = size*size;\n    let numberOfCols = size*size;\n    let allInidicies = [];\n\n    // Add all rows\n    for(let row = 0; row < numberOfRows; row++){\n        let rowIndicies = [];\n        for(let col = 0; col < numberOfCols; col++){\n            rowIndicies.push(buildPos(row, col));\n        }\n        allInidicies.push(rowIndicies);\n    }\n    // Add all columns\n    for(let col = 0; col < numberOfCols ; col++){\n        let rowIndicies = [];\n        for(let row = 0; row < numberOfRows; row++){\n            rowIndicies.push(buildPos(row, col));\n        }\n        allInidicies.push(rowIndicies);\n    }\n\n    /*\n     *  0  1  |  4  5\n     *  2  3  |  6  7\n     * -------+-------\n     *  8  9  | 12 13\n     * 10 11  | 14 15\n     *\n     *  0 -> 0:0 1 -> 0:1   2 -> 1:0   3 -> 1:1\n     *  4 -> 0:2 5 -> 0:3   6 -> 1:2   7 -> 1:3\n     *  8 -> 2:0 9 -> 2:1  10 -> 3:0  11 -> 3:1\n     * 12 -> 2:2 13 -> 2:3 14 -> 3:2  15 -> 3:3\n     *\n     */\n    const quadrantSize = size;\n    const numOfQuadrants = size;\n    let quadrantRows = numOfQuadrants;\n    let quadrantCols = numOfQuadrants;\n    let rowsInQuadrant = quadrantSize;\n    let colsInQuadrant = quadrantSize;\n\n    for (let quadrantRow = 0; quadrantRow < quadrantRows; quadrantRow++) {\n        for (let quadrantCol = 0; quadrantCol < quadrantCols; quadrantCol++) {\n            let quadrantIndicies = [];\n            for (let row = 0; row < rowsInQuadrant; row++) {\n                for (let col = 0; col < colsInQuadrant; col++) {\n                    let x = (quadrantCol*quadrantSize) + col;\n                    let y = (quadrantRow*quadrantSize) + row;\n                    quadrantIndicies.push(buildPos(y, x));\n                }\n            }\n            allInidicies.push(quadrantIndicies);\n        }\n    }\n\n    return allInidicies;\n}\nfunction getNeighborsMap(indicies){\n    let neighborsMap = {};\n    for(let i = 0; i < indicies.length; i++){\n        for(let j = 0; j < indicies[i].length; j++){\n            let key = getKeyFromPos(indicies[i][j]);\n            if (neighborsMap[key] === undefined) {\n                neighborsMap[key] = []\n            }\n            neighborsMap[key] = getUniquePoss([...neighborsMap[key], ...indicies[i]]);\n        }\n    }\n    return neighborsMap;\n}\n\nfunction mapGameboardSquare(gameboard, poss, fn){\n    let gb = deepCopy(gameboard);\n    let ps = Array.isArray(poss) ? poss : [poss];\n    ps.forEach((pos) => {\n        let result = fn(gb[pos.y].values[pos.x]);\n        if( typeof result !== 'undefined'){\n            gb[pos.y].values[pos.x] = result;\n        }\n\n    })\n    return gb;\n}\n\nfunction getUniquePoss(a) {\n    if(a.length === 0){\n        return [];\n    }\n    var b = [a[0]], i, j, tmp;\n    for (i = 1; i < a.length; i++) {\n        tmp = 1;\n        for (j = 0; j < b.length; j++) {\n            if (isSamePos(a[i], b[j])) {\n                tmp = 0;\n                break;\n            }\n        }\n        if (tmp) {\n            b.push(a[i]);\n        }\n    }\n    return b;\n}\n\nfunction buildSquare(y, x, value){\n    let square = {\n        id: y + \":\" + x,\n        y: y,\n        x: x,\n        value: value,\n        failing: false,\n        locked: false,\n        possible: {\"0\": true, \"1\": true, \"2\": true, \"3\": true, \"4\": true, \"5\": true, \"6\": true, \"7\": true, \"8\": true, \"9\": true}\n    };\n    square.possible[value] = false;\n    return square;\n}\nfunction mapHint(gameBoard, poss, fn){\n    return mapGameboardSquare(gameBoard, poss, (square)=>{\n        Object.keys(square.possible).forEach(numStr => {\n            square.possible[numStr] = fn(Number(numStr),square.possible[numStr]);\n        })\n        return square;\n    })\n}\n\nfunction buildPos(y,x){return {y:y, x:x}};\nfunction isSamePos(s1, s2){return s1.x === s2.x && s1.y === s2.y;}\nfunction getKeyFromPos(pos){return pos.x + \":\" + pos.y;}\nfunction getPosFromKey(key){return {x:key.split(\":\")[0], y:key.split(\":\")[1]};}\n\nconst isEmptyArray = (array) => {return !array || !array.length;}\nfunction deepCopy(gameBoard) {return JSON.parse(JSON.stringify(gameBoard));}\n\n\nexport default Suduko;\n","import React from 'react';\nimport {Suduko} from './suduko'\nimport './App.css';\n\nfunction App() {\n  return (\n      <div className={'App'}>\n      <Suduko/>\n      </div>\n      );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}